/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  TradingScenario as PrismaTradingScenario,
  MarketScan as PrismaMarketScan,
} from "@prisma/client";

export class TradingScenarioServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TradingScenarioCountArgs, "select">
  ): Promise<number> {
    return this.prisma.tradingScenario.count(args);
  }

  async tradingScenarios(
    args: Prisma.TradingScenarioFindManyArgs
  ): Promise<PrismaTradingScenario[]> {
    return this.prisma.tradingScenario.findMany(args);
  }
  async tradingScenario(
    args: Prisma.TradingScenarioFindUniqueArgs
  ): Promise<PrismaTradingScenario | null> {
    return this.prisma.tradingScenario.findUnique(args);
  }
  async createTradingScenario(
    args: Prisma.TradingScenarioCreateArgs
  ): Promise<PrismaTradingScenario> {
    return this.prisma.tradingScenario.create(args);
  }
  async updateTradingScenario(
    args: Prisma.TradingScenarioUpdateArgs
  ): Promise<PrismaTradingScenario> {
    return this.prisma.tradingScenario.update(args);
  }
  async deleteTradingScenario(
    args: Prisma.TradingScenarioDeleteArgs
  ): Promise<PrismaTradingScenario> {
    return this.prisma.tradingScenario.delete(args);
  }

  async getMarketScan(parentId: string): Promise<PrismaMarketScan | null> {
    return this.prisma.tradingScenario
      .findUnique({
        where: { id: parentId },
      })
      .marketScan();
  }
}
